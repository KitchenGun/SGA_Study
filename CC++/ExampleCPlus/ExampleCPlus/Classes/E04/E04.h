#pragma once

#include "../Global/Define/KGDefine.h"


/*
객체 지향의 3대 요소 

상속
다향성
정보은닉 캡슐화
상속이란?

특정 클래스 간에 공통되는 속성 및 기능를 하나의 클래스에 구현 및 해당 클래스를 공유 할수있는 기능을 의미한다 
즉 상속을 활용하면 클래스 간에 중복되는 속성등을 줄이는 것이 가능하다

상속이라는 것은 각 클래스 간에 관계를 형성하는 것이며 해당기능을 사용하면 부모자식의 관계를 만들어 내는 것이 가능하다

단 기본적으로 C++의 모든 클래스는 상속이 가능하기 때문에 특별한 규칙 없이 상속을 남발했을 경우 논리적인 혼란이 발생한다 
올바른 상속 관계는 (자식 is a 부모) 관계이다

또한 C++언어는 여러 클래스를 상속 할수 있는 다중 상속을 지원한다
단 다중 상속은 기본적으로 혼돈을 가져오는 죽음의 다이아몬드 관계를 형성할수있기 때문에 다중 상속은 절대 사용하지 않는 것을 권장한다
 
 만약에 만약에 다중상속으로 사용했을 경우 제외하고 싶은 상속부분에 virtual을 사용하면된다

ex
class CParent
{
protected:
	int m_nValue=0;
};
class CChild : public CParent
{
	//출력
	void PrintValue(void)
	{
	printf("value : %d\n",m_nValue);
	}
}

자식 클래스는 부모 클래스를 상속했기 때문에 부모 클래스에 선언된 맴버 변수및 함수를 그대로 사용하는 것이 가능하다. 
단 부모의 private 영역에 존재하는 맴버는 자식이여도 접근 못함

다형성이란?
한 객체가 특정 상황에 따라서 다양한 특징을 지니고 있는 것을 다향성이라고 한다
즉 다형성을 활용하면 특정 객체를 상황에 따라 서로 다른 모습으로 인식하는 것이 가능하다

c++언어에서는 다형성을 표현 하기 위해서 상속과 포인터를 활용해야하며 특정 클래스가 상속 관계에 있을때 
해당 클래스의 부모 포인터로 자식객체로 가리키는 것이 가능하다
즉 포인터 자체의 형태는 부모 클래스의 형태이지만 실제 가리키는 사물은 자식 객체인것이다

*/
namespace E04Space
{
	void E04(const int argc, const char **args);
}