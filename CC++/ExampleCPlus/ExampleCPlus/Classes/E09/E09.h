#pragma once


#include "../Global/Define/KGDefine.h"

/*
STL이란?
c++에서 제공하는 템플릿으로 이루어진 표준 라이브러리를 의미한다 즉 해당 라이브러리를 사용하면 프로그램을 개발하는데 있어서 
미리 만들어진 여러 기능을 활용할수있기에 개발 기간을 단축하는 것이 가능하다 

c++ STL의 주요 기능
-컬랙션		(밸런스 이진탐색 트리) (해쉬테이블)
array vector list   map        unordered_map set
array는 고정 크기 배열이다(c++11에 추가)
vector 동적 크기 배열이다
list array vector 순차 구조이다.
나머지 비선형구조
map의 경우 탐색의 최악과 최선의 경우 속도가 비슷하지만    
단점  트리의 균형을 유지하기위해서 추가적인 연산이 필요하다 
unordered map의 경국 최악과 최선의 속도가 매우 근명하다   
단점 헤쉬함수를 거치고 테이블에 같은 해쉬값을 가진 데이터가 여러개 있으면 충돌(클러스터현상)이 발생해서 검색시간이 늘어난다

map vs unordered_map 

=map은 내부적으로 밸런스 이진 탐색 트리로 구현되어있기 때문에 최선의 경우든 최악의 경우든 비슷한 log  n의 탐색성능을 보장한다 
단 내부적으로 트리의 균형이 무너지는 것을 방지하기 위해서 특정 데이터 삽입 삭제 했을 때 트리 균형을 회복하기 위한 추가적인 연산이 발생한다

=unordered map은 내부적으로 해시 테이블로 구현되어있기 때문에 최선의 경우 0 1 상수 시간의 탐색을 보장한다 단 특정 데이터가 해시 테이블에
특정지역에 밀집하는 클러스터 현상이 발생할경우 탐색의 성능이 떨어지기 때문에 최악의 경우 0의 탐색 시간이 필요하다
(하지만 이런 경우는 극히 드문일이고 일반적으로 map보다 빠르다) c# 딕션어리가 이쪽 계열

set 비선형구조 이다.
-반복자
-유틸리티 함수
sort find....

컬렉션이란?
2개 이상의 데이터를 효율적으로 관리 할수있는 기능을 제공하는 클래스 집합을 의미한다
즉 프로그램을 개발할때 상황에 맞는 컬렉션을 사용하면 다수의 데이터를 쉽게 제어가능하다

또한 기존의 배열도 컬렉션에 일부이다.

Iterater
Enumerator 
반복자란? 
컬렉션의 특정 데이터또는 위치를 가리키는 포인터처럼 동작하는 객체를 의미한다
단 스마트 포인터는 아니다
반복자를 사용하면 컬렉션 별로 비슷한 구문으로 해당 컬렉션에 존재하는 데이터를 제어하는것이 가능하다 


이동 생성자란?  Move semantics
기존의 C++언어가 가지고 있던 근본적인 문제를 해결하기 위해서 새롭게 등장한 생성자의 유형으로써 해당 생성자를 사용하면 
이동 시멘틱을 구현하는 것이 가능하다. 
즉 해당 생성자를 사용함으로 불필요한 객체의 복사를 방지하는 것이 가능하다
*/
namespace E09Space
{
	void E09(const int argc, const char **args);
}